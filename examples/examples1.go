package examples

import (
	"fmt"
	"unicode/utf8"

	"sandboxProject/pkg"
)

type sdfsdf interface{}

type ExamplesOne struct{}

func (a *ExamplesOne) Start() {
	defer pkg.ExecuteTime("Start")()

	//GOMAXPROCSExp()
	//WaitGroupExp()

	StringsArray()
}

func StringsArray() {
	s := "Boat üéÇ."

	fmt.Println("lenght:", len(s))

	fmt.Println("rune count:", utf8.RuneCount([]byte(s)))

	fmt.Println("rune len of A:", utf8.RuneLen([]rune("A")[0]))

	fmt.Println("rune len of üéÇ:", utf8.RuneLen([]rune("üéÇ")[0]))

	// string - –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤ (8-–±–∏—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ utf-8) —Ç –µ –∫–æ–≥–¥–∞ –º—ã –≤—ã–∑—ã–≤–∞–µ–º len(s) —Ç–æ –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª-–≤–æ –±–∞–π—Ç (8 –±–∏—Ç)
	// –í —Ü–µ–ª–æ–º —Å—Ç—Ä–æ–∫—É –ø–æ-–°–ò–ú–í–û–õ–¨–ù–û –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –º–∞—Å—Å–∏–≤ rune. Rune - —ç—Ç–æ alias int32. —Ç –µ –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –¥–æ 4 –±–∞–π—Ç (32 –±–∏—Ç–∞)
	// –ï—Å–ª–∏ —É –Ω–∞—Å –≤ —Å—Ç—Ä–æ–∫–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –±–æ–ª—å—à–æ–π —Å–∏–º–≤–æ–ª, —Ç–æ –æ–Ω –º–æ–¥–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ 1-2-3-4 –±–∞–π—Ç–∞. –í—ã—è—Å–Ω–∏—Ç—å –∂—Ç–æ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é utf8.RuneLen
	// –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–æ —é–∑–∞—Ç—å –Ω–∞–¥–æ —Ñ—É–Ω–∫—Ü–∏—é utf8.RuneCount
	for i, c := range s {
		fmt.Printf("position %d of %s \n", i, string(c))
	}
}
